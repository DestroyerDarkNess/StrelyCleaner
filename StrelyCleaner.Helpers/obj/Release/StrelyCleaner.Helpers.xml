<?xml version="1.0"?>
<doc>
<assembly>
<name>
StrelyCleaner.Helpers
</name>
</assembly>
<members>
<member name="T:StrelyCleaner.Helpers.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:StrelyCleaner.Helpers.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:StrelyCleaner.Helpers.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:StrelyCleaner.Helpers.Controls.Core.Animator.StartValue">
 <summary>
 Start value
 </summary>
 <returns></returns>
</member>
<member name="P:StrelyCleaner.Helpers.Controls.Core.Animator.StopValue">
 <summary>
 Stop value
 </summary>
 <returns></returns>
</member>
<member name="P:StrelyCleaner.Helpers.Controls.Core.Animator.Time">
 <summary>
 Current Time in milli seconds
 </summary>
 <returns></returns>
</member>
<member name="P:StrelyCleaner.Helpers.Controls.Core.Animator.Duration">
 <summary>
 Durration of Animation in milli seconds
 </summary>
 <returns></returns>
</member>
<member name="P:StrelyCleaner.Helpers.Controls.Core.Animator.Function">
 <summary>
 Funktion that defines value calculation
 </summary>
 <returns></returns>
</member>
<member name="M:StrelyCleaner.Helpers.Controls.Core.Animator.#ctor(System.Int32,System.Int32,System.Int32)">
 <summary>
 New linear Animator
 </summary>
 <param name="Start">Start value</param>
 <param name="[Stop]">Stop Value</param>
 <param name="Duration">Duration in milli seconds</param>
</member>
<member name="M:StrelyCleaner.Helpers.Controls.Core.Animator.#ctor(System.Int32,System.Int32,System.Int32,System.Func{System.Single,System.Single})">
 <summary>
 New custom Animator
 </summary>
 <param name="Start">Start value</param>
 <param name="[Stop]">Stop value</param>
 <param name="Duration">Duration in milli seconds</param>
 <param name="[Function]">Funktion that defines value calculation</param>
</member>
<member name="T:StrelyCleaner.Helpers.SetWindowState">
 <summary>
 Sets the state of a window.
 </summary>
</member>
<member name="T:StrelyCleaner.Helpers.SetWindowState.NativeMethods">
 <summary>
 Platform Invocation methods (P/Invoke), access unmanaged code.
 This class does not suppress stack walks for unmanaged code permission.
 <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute"/>  must not be applied to this class.
 This class is for methods that can be used anywhere because a stack walk will be performed.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/ms182161.aspx
 </summary>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowState.NativeMethods.FindWindow(System.String,System.String)">
 <summary>
 Retrieves a handle to the top-level window whose class name and window name match the specified strings.
 This function does not search child windows.
 This function does not perform a case-sensitive search.
 To search child windows, beginning with a specified child window, use the FindWindowEx function.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633499%28v=vs.85%29.aspx
 </summary>
 <param name="lpClassName">The class name.
 If this parameter is NULL, it finds any window whose title matches the lpWindowName parameter.</param>
 <param name="lpWindowName">The window name (the window's title).
 If this parameter is NULL, all window names match.</param>
 <returns>If the function succeeds, the return value is a handle to the window that has the specified class name and window name.
 If the function fails, the return value is NULL.</returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowState.NativeMethods.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
 <summary>
 Retrieves a handle to a window whose class name and window name match the specified strings. 
 The function searches child windows, beginning with the one following the specified child window. 
 This function does not perform a case-sensitive search.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633500%28v=vs.85%29.aspx
 </summary>
 <param name="hwndParent">
 A handle to the parent window whose child windows are to be searched.
 If hwndParent is NULL, the function uses the desktop window as the parent window. 
 The function searches among windows that are child windows of the desktop. 
 </param>
 <param name="hwndChildAfter">
 A handle to a child window. 
 The search begins with the next child window in the Z order. 
 The child window must be a direct child window of hwndParent, not just a descendant window.
 If hwndChildAfter is NULL, the search begins with the first child window of hwndParent.
 </param>
 <param name="strClassName">
 The window class name.
 </param>
 <param name="strWindowName">
 The window name (the window's title). 
 If this parameter is NULL, all window names match.
 </param>
 <returns>
 If the function succeeds, the return value is a handle to the window that has the specified class and window names.
 If the function fails, the return value is NULL.
 </returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowState.NativeMethods.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
 <summary>
 Retrieves the identifier of the thread that created the specified window 
 and, optionally, the identifier of the process that created the window.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633522%28v=vs.85%29.aspx
 </summary>
 <param name="hWnd">A handle to the window.</param>
 <param name="ProcessId">
 A pointer to a variable that receives the process identifier. 
 If this parameter is not NULL, GetWindowThreadProcessId copies the identifier of the process to the variable; 
 otherwise, it does not.
 </param>
 <returns>The identifier of the thread that created the window.</returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowState.NativeMethods.ShowWindow(System.IntPtr,StrelyCleaner.Helpers.SetWindowState.WindowState)">
 <summary>
 Sets the specified window's show state.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633548%28v=vs.85%29.aspx
 </summary>
 <param name="hwnd">A handle to the window.</param>
 <param name="nCmdShow">Controls how the window is to be shown.</param>
 <returns><c>true</c> if the function succeeds, <c>false</c> otherwise.</returns>
</member>
<member name="T:StrelyCleaner.Helpers.SetWindowState.WindowState">
 <summary>
 Controls how the window is to be shown.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633548%28v=vs.85%29.aspx
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Hide">
 <summary>
 Hides the window and activates another window.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Normal">
 <summary>
 Activates and displays a window. 
 If the window is minimized or maximized, the system restores it to its original size and position.
 An application should specify this flag when displaying the window for the first time.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ShowMinimized">
 <summary>
 Activates the window and displays it as a minimized window.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Maximize">
 <summary>
 Maximizes the specified window.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ShowMaximized">
 <summary>
 Activates the window and displays it as a maximized window.
 </summary>      
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ShowNoActivate">
 <summary>
 Displays a window in its most recent size and position. 
 This value is similar to <see cref="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Normal"/>, except the window is not actived.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Show">
 <summary>
 Activates the window and displays it in its current size and position.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Minimize">
 <summary>
 Minimizes the specified window and activates the next top-level window in the Z order.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ShowMinNoActive">
 <summary>
 Displays the window as a minimized window. 
 This value is similar to <see cref="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ShowMinimized"/>, except the window is not activated.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ShowNA">
 <summary>
 Displays the window in its current size and position.
 This value is similar to <see cref="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Show"/>, except the window is not activated.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.Restore">
 <summary>
 Activates and displays the window. 
 If the window is minimized or maximized, the system restores it to its original size and position.
 An application should specify this flag when restoring a minimized window.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ShowDefault">
 <summary>
 Sets the show state based on the SW_* value specified in the STARTUPINFO structure 
 passed to the CreateProcess function by the program that started the application.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.SetWindowState.WindowState.ForceMinimize">
 <summary>
 <b>Windows 2000/XP:</b> 
 Minimizes a window, even if the thread that owns the window is not responding. 
 This flag should only be used when minimizing windows from a different thread.
 </summary>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowState.SetWindowState(System.IntPtr,StrelyCleaner.Helpers.SetWindowState.WindowState)">
 <summary>
 Set the state of a window by an HWND.
 </summary>
 <param name="WindowHandle">A handle to the window.</param>
 <param name="WindowState">The state of the window.</param>
 <returns><c>true</c> if the function succeeds, <c>false</c> otherwise.</returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowState.SetWindowState(System.String,StrelyCleaner.Helpers.SetWindowState.WindowState,System.Boolean)">
 <summary>
 Set the state of a window by a process name.
 </summary>
 <param name="ProcessName">The name of the process.</param>
 <param name="WindowState">The state of the window.</param>
 <param name="Recursivity">If set to <c>false</c>, only the first process instance will be processed.</param>
</member>
<member name="T:StrelyCleaner.Helpers.SetWindowStyle">
 <summary>
 Sets the style of a window.
 </summary>
</member>
<member name="T:StrelyCleaner.Helpers.SetWindowStyle.NativeMethods">
 <summary>
 Platform Invocation methods (P/Invoke), access unmanaged code.
 This class does not suppress stack walks for unmanaged code permission.
 <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute"/>  must not be applied to this class.
 This class is for methods that can be used anywhere because a stack walk will be performed.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/ms182161.aspx
 </summary>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowStyle.NativeMethods.FindWindow(System.String,System.String)">
 <summary>
 Retrieves a handle to the top-level window whose class name and window name match the specified strings.
 This function does not search child windows.
 This function does not perform a case-sensitive search.
 To search child windows, beginning with a specified child window, use the FindWindowEx function.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633499%28v=vs.85%29.aspx
 </summary>
 <param name="lpClassName">The class name.
 If this parameter is NULL, it finds any window whose title matches the lpWindowName parameter.</param>
 <param name="lpWindowName">The window name (the window's title).
 If this parameter is NULL, all window names match.</param>
 <returns>If the function succeeds, the return value is a handle to the window that has the specified class name and window name.
 If the function fails, the return value is NULL.</returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowStyle.NativeMethods.FindWindowEx(System.IntPtr,System.IntPtr,System.String,System.String)">
 <summary>
 Retrieves a handle to a window whose class name and window name match the specified strings. 
 The function searches child windows, beginning with the one following the specified child window. 
 This function does not perform a case-sensitive search.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633500%28v=vs.85%29.aspx
 </summary>
 <param name="hwndParent">
 A handle to the parent window whose child windows are to be searched.
 If hwndParent is NULL, the function uses the desktop window as the parent window. 
 The function searches among windows that are child windows of the desktop. 
 </param>
 <param name="hwndChildAfter">
 A handle to a child window. 
 The search begins with the next child window in the Z order. 
 The child window must be a direct child window of hwndParent, not just a descendant window.
 If hwndChildAfter is NULL, the search begins with the first child window of hwndParent.
 </param>
 <param name="strClassName">
 The window class name.
 </param>
 <param name="strWindowName">
 The window name (the window's title). 
 If this parameter is NULL, all window names match.
 </param>
 <returns>
 If the function succeeds, the return value is a handle to the window that has the specified class and window names.
 If the function fails, the return value is NULL.
 </returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowStyle.NativeMethods.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
 <summary>
 Retrieves the identifier of the thread that created the specified window 
 and, optionally, the identifier of the process that created the window.
 MSDN Documentation: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633522%28v=vs.85%29.aspx
 </summary>
 <param name="hWnd">A handle to the window.</param>
 <param name="ProcessId">
 A pointer to a variable that receives the process identifier. 
 If this parameter is not NULL, GetWindowThreadProcessId copies the identifier of the process to the variable; 
 otherwise, it does not.
 </param>
 <returns>The identifier of the thread that created the window.</returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowStyle.SetWindowStyle(System.IntPtr,StrelyCleaner.Helpers.SetWindowStyle.WindowStyles)">
 <summary>
 Set the state of a window by an HWND.
 </summary>
 <param name="WindowHandle">A handle to the window.</param>
 <param name="WindowStyle">The Style of the window.</param>
 <returns><c>true</c> if the function succeeds, <c>false</c> otherwise.</returns>
</member>
<member name="M:StrelyCleaner.Helpers.SetWindowStyle.SetWindowStyle(System.String,StrelyCleaner.Helpers.SetWindowStyle.WindowStyles,System.Boolean)">
 <summary>
 Set the state of a window by a process name.
 </summary>
 <param name="ProcessName">The name of the process.</param>
 <param name="WindowStyle">The Style of the window.</param>
 <param name="Recursivity">If set to <c>false</c>, only the first process instance will be processed.</param>
</member>
<member name="T:StrelyCleaner.Helpers.Types.IBufferedControl">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Provides simple double buffering (anti flickering) functionality for a Windows Forms <see cref="T:System.Windows.Forms.Control"/>,
 such for example a <see cref="T:System.Windows.Forms.TextBox"/>.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:StrelyCleaner.Helpers.Types.IBufferedControl.CreateParams">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the required creation parameters when the control handle is created.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The creation parameters.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:StrelyCleaner.Helpers.Types.IBufferedControl.DoubleBuffered">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer 
 to reduce or prevent flicker.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 <see langword="True"/> if the surface of the control should be drawn using double buffering; 
 otherwise, <see langword="False"/>.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:StrelyCleaner.Helpers.Types.IBufferedControl.PreventFlickering">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value that indicates whether the control should avoid unwanted flickering effects.
 <para></para>
 If <see langword="True"/>, this will avoid any flickering effect on the control, however,
 it will also have a negative impact by slowing down the responsiveness of the control about to 30% slower.
 <para></para>
 This negative impact doesn't affect to the performance of the application itself, 
 just to the performance of this control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 A value that indicates whether the control should avoid unwanted flickering effects.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:StrelyCleaner.Helpers.PanelFX.CreateParams">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the required creation parameters when the control handle is created.
 <para></para>
 The information returned by the <see cref="P:StrelyCleaner.Helpers.PanelFX.CreateParams"/> property is used to pass information about the 
 initial state and appearance of this control, at the time an instance of this class is being created.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The creation parameters.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:StrelyCleaner.Helpers.PanelFX.DoubleBuffered">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer 
 to reduce or prevent flicker.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 <see langword="True"/> if the surface of the control should be drawn using double buffering; 
 otherwise, <see langword="False"/>.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:StrelyCleaner.Helpers.PanelFX.PreventFlickering">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value that indicates whether the control should avoid unwanted flickering effects.
 <para></para>
 If <see langword="True"/>, this will avoid any flickering effect on the control, however,
 it will also have a negative impact by slowing down the responsiveness of the control about to 30% slower.
 <para></para>
 This negative impact doesn't affect to the performance of the application itself, 
 just to the performance of this control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 A value that indicates whether the control should avoid unwanted flickering effects.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:StrelyCleaner.Helpers.PanelFX.preventFlickeringB">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field )
 A value that indicates whether the control should avoid unwanted flickering effects.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_ACCEPTFILES">
 <summary>Specifies a window that accepts drag-drop files.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_APPWINDOW">
 <summary>Forces a top-level window onto the taskbar when the window is visible.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_CLIENTEDGE">
 <summary>Specifies a window that has a border with a sunken edge.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_COMPOSITED">
 <summary>
 Specifies a window that paints all descendants in bottom-to-top painting order using double-buffering.
 This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC. This style is not supported in Windows 2000.
 </summary>
 <remarks>
 With WS_EX_COMPOSITED set, all descendants of a window get bottom-to-top painting order using double-buffering.
 Bottom-to-top painting order allows a descendent window to have translucency (alpha) and transparency (color-key) effects,
 but only if the descendent window also has the WS_EX_TRANSPARENT bit set.
 Double-buffering allows the window and its descendents to be painted without flicker.
 </remarks>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_CONTEXTHELP">
 <summary>
 Specifies a window that includes a question mark in the title bar. When the user clicks the question mark,
 the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message.
 The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command.
 The Help application displays a pop-up window that typically contains help for the child window.
 WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_CONTROLPARENT">
 <summary>
 Specifies a window which contains child windows that should take part in dialog box navigation.
 If this style is specified, the dialog manager recurses into children of this window when performing navigation operations
 such as handling the TAB key, an arrow key, or a keyboard mnemonic.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_DLGMODALFRAME">
 <summary>Specifies a window that has a double border.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_LAYERED">
 <summary>
 Specifies a window that is a layered window.
 This cannot be used for child windows or if the window has a class style of either CS_OWNDC or CS_CLASSDC.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_LAYOUTRTL">
 <summary>
 Specifies a window with the horizontal origin on the right edge. Increasing horizontal values advance to the left.
 The shell language must support reading-order alignment for this to take effect.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_LEFT">
 <summary>Specifies a window that has generic left-aligned properties. This is the default.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_LEFTSCROLLBAR">
 <summary>
 Specifies a window with the vertical scroll bar (if present) to the left of the client area.
 The shell language must support reading-order alignment for this to take effect.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_LTRREADING">
 <summary>
 Specifies a window that displays text using left-to-right reading-order properties. This is the default.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_MDICHILD">
 <summary>
 Specifies a multiple-document interface (MDI) child window.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_NOACTIVATE">
 <summary>
 Specifies a top-level window created with this style does not become the foreground window when the user clicks it.
 The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
 The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
 To activate the window, use the SetActiveWindow or SetForegroundWindow function.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_NOINHERITLAYOUT">
 <summary>
 Specifies a window which does not pass its window layout to its child windows.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_NOPARENTNOTIFY">
 <summary>
 Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_NOREDIRECTIONBITMAP">
 <summary>
 The window does not render to a redirection surface.
 This is for windows that do not have visible content or that use mechanisms other than surfaces to provide their visual.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_OVERLAPPEDWINDOW">
 <summary>Specifies an overlapped window.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_PALETTEWINDOW">
 <summary>Specifies a palette window, which is a modeless dialog box that presents an array of commands.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_RIGHT">
 <summary>
 Specifies a window that has generic "right-aligned" properties. This depends on the window class.
 The shell language must support reading-order alignment for this to take effect.
 Using the WS_EX_RIGHT style has the same effect as using the SS_RIGHT (static), ES_RIGHT (edit), and BS_RIGHT/BS_RIGHTBUTTON (button) control styles.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_RIGHTSCROLLBAR">
 <summary>Specifies a window with the vertical scroll bar (if present) to the right of the client area. This is the default.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_RTLREADING">
 <summary>
 Specifies a window that displays text using right-to-left reading-order properties.
 The shell language must support reading-order alignment for this to take effect.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_STATICEDGE">
 <summary>Specifies a window with a three-dimensional border style intended to be used for items that do not accept user input.</summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_TOOLWINDOW">
 <summary>
 Specifies a window that is intended to be used as a floating toolbar.
 A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font.
 A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB.
 If a tool window has a system menu, its icon is not displayed on the title bar.
 However, you can display the system menu by right-clicking or by typing ALT+SPACE.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_TOPMOST">
 <summary>
 Specifies a window that should be placed above all non-topmost windows and should stay above them, even when the window is deactivated.
 To add or remove this style, use the SetWindowPos function.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_TRANSPARENT">
 <summary>
 Specifies a window that should not be painted until siblings beneath the window (that were created by the same thread) have been painted.
 The window appears transparent because the bits of underlying sibling windows have already been painted.
 To achieve transparency without these restrictions, use the SetWindowRgn function.
 </summary>
</member>
<member name="F:StrelyCleaner.Helpers.Win32FX.WindowStylesEx.WS_EX_WINDOWEDGE">
 <summary>Specifies a window that has a border with a raised edge.</summary>
</member>
</members>
</doc>
